{
  "name": "Telegram-notify",
  "tagline": "Get notification from multiple services into one telegram chat",
  "body": "# Telegram Notify\r\n\r\nThis library collects data from multiple services, converts (transforms) it and send you as Telegram Message.\r\n\r\n# Usage\r\n\r\n1. [Create Telegram Bot](https://core.telegram.org/bots#creating-a-new-bot) - you need only token here\r\n2. Add bot to any chat or send it a message directly\r\n2. Open URL `https://api.telegram.org/bot<BOT TOKEN>/getUpdates` (replace `<BOT TOKEN>` with your bot token) and get your chat id(-s).\r\n3. Write configuration array for Telegram Notify library:\r\n\r\n```php\r\n<?php\r\n$config = [\r\n    'token' => '<BOT TOKEN>',\r\n    'notifications' => [\r\n        [\r\n            'chat_id' => '<YOUR CHAT ID>',\r\n            'parse_mode' => 'HTML', //currently supported only 'HTML'\r\n            'notify' => [ //List of integrations, you can add multiple accounts for each service and multiple services\r\n                [\r\n                    //RSS integration will post you messages with new items in feed\r\n                    'type' => 'RSS', //Integration type\r\n                    'source' => 'https://www.teamoctos.com/category/changelog/feed/' //Feed source URL\r\n                ],\r\n                [\r\n                    'type' => 'Email', //Works with any IMAP server\r\n                    'source' => [\r\n                        'mailbox' => '{imap.gmail.com:993/imap/ssl}INBOX', //@link https://secure.php.net/manual/ru/function.imap-open.php\r\n                        'user' => 'example@gmail.com', // your login\r\n                        'password' => 'example-password' // your password\r\n                    ]\r\n                ],\r\n                [\r\n                    'type' => 'Trello', //Get all unread notifications from trello\r\n                    'source' => [\r\n                        'api_key' => 'trello-app-key', //https://trello.com/app-key\r\n                        'token' => 'trello-user-token' //https://developers.trello.com/authorize\r\n                    ],\r\n                ]\r\n            ],\r\n        ],\r\n    ],\r\n];\r\n```\r\n\r\nGood! Now you need create function, which will check if message was already sent.\r\n\r\nI use [mauris/packer](https://github.com/mauris/Packer-PHP) (you need **dev-master** version for `exists` function)\r\nas storage for already sent messages, here is it:\r\n\r\n```php\r\n<?php\r\n//Arguments: chat id, message text\r\n//Must return bool\r\n$isSent = function (string $chatId, string $message) {\r\n    $key = md5($chatId.$message);\r\n    $sent = new \\Packer\\Packer('./sent.pack');\r\n    if ($sent->exists($key)) {\r\n        return true;\r\n    }\r\n    $sent->write($key, $message);\r\n\r\n    return false;\r\n};\r\n```\r\n\r\nVery good! Final run script must be something like this (I use it for my private integration):\r\n\r\n```php\r\n<?php\r\nrequire './vendor/autoload.php';\r\n$config = [\r\n    'token' => 'toke',\r\n    'notifications' => [\r\n        [\r\n            'chat_id' => 'chat_id',\r\n            'parse_mode' => 'HTML',\r\n            'notify' => [\r\n                [\r\n                    'type' => 'RSS',\r\n                    'source' => 'https://www.teamoctos.com/category/changelog/feed/'\r\n                ],\r\n                [\r\n                    'type' => 'Email',\r\n                    'source' => [\r\n                        'mailbox' => '{imap.gmail.com:993/imap/ssl}INBOX',\r\n                        'user' => 'example@gmail.com',\r\n                        'password' => 'example-password'\r\n                    ]\r\n                ],\r\n                [\r\n                    'type' => 'Trello',\r\n                    'source' => [\r\n                        'api_key' => 'key',\r\n                        'token' => 'token'\r\n                    ],\r\n                ]\r\n            ],\r\n        ],\r\n    ],\r\n];\r\n\r\n$isSent = function (string $chatId, string $message) {\r\n    $key = md5($chatId.$message);\r\n    $sent = new \\Packer\\Packer('./sent.pack');\r\n    if ($sent->exists($key)) {\r\n        return true;\r\n    }\r\n    $sent->write($key, $message);\r\n\r\n    return false;\r\n};\r\n\r\n$notify = new \\Rakshazi\\TelegramNotify($config, $isSent);\r\n$notify->run();\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}